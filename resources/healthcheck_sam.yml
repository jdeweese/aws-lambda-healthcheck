AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: "A lambda function that runs inside a VPC and performs a TCP ping for any configure EC2 service"
Parameters: 
  VpcId: 
    Type: "AWS::EC2::VPC::Id"
    Description: "Enter the VPC ID you want Lambda Healthcheck install into"
  SubnetIds: 
    Type: "List<AWS::EC2::Subnet::Id>"
    Description: "Enter a comma delimitated list of subnets within the VPC that can ping the EC2s"
Resources:
  # Creates a AWS Role for Lambda function to execute as
  HealthCheckRole:
    Type: "AWS::IAM::Role"
    Properties: 
      AssumeRolePolicyDocument: 
        Version: "2012-10-17"
        Statement: 
            Effect: "Allow"
            Principal: 
              Service: "lambda.amazonaws.com"
            Action: "sts:AssumeRole"
      Path: "/"
      Policies:
        -
          PolicyName: "healthcheck"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - 
                Effect: "Allow"
                Action:
                  - "ec2:CreateNetworkInterface"
                  - "ec2:DescribeNetworkInterfaces"
                  - "ec2:DetachNetworkInterface"
                  - "ec2:DeleteNetworkInterface"
                  - "ec2:DescribeInstances"
                  - "logs:CreateLogGroup"
                  - "logs:CreateLogStream"
                  - "logs:PutLogEvents"
                Resource: "*"
              - 
                Effect: "Allow"
                Action:
                  - "dynamodb:CreateTable"
                  - "dynamodb:ListTables"
                  - "dynamodb:DeleteItem"
                  - "dynamodb:GetItem"
                  - "dynamodb:PutItem"
                  - "dynamodb:UpdateItem"
                Resource: "*"
              - 
                Effect: "Allow"
                Action:
                  - "autoscaling:SetInstanceHealth"
                Resource: "*"
              - 
                Effect: "Allow"
                Action:
                  - "lambda:*"
                Resource: "*"

  # Security Group created with default egress ingress rules. Allows lambda to tcp ping
  HealthCheckSG:
    Type: "AWS::EC2::SecurityGroup"
    Properties:
      GroupDescription: "Security Group created for lambda health check within VPC"
      VpcId: !Ref "VpcId"
   
  #  SAM definition of the health check function    
  HealthCheck:
    Type: "AWS::Serverless::Function"
    Properties:
      Handler: "index.handler"
      Runtime: nodejs4.3
      CodeUri: 's3://jasonmd-lambda-functions/lambda-healthcheck.zip'
      Description: "a lambda functions that checks and EC2 in the VPC that has the proper tags"
      Timeout: 25
      Role: !GetAtt "HealthCheckRole.Arn"
      Events:
        Timer:
          Type: Schedule
          Properties:
            Schedule: rate(1 minute)
      VpcConfig:
        SecurityGroupIds:
          - !GetAtt "HealthCheckSG.GroupId"
        SubnetIds: 
          - !Ref 'SubnetIds'
        #  - subnet-6811f230
        #  - subnet-7bb7aa50
        #  - subnet-3db47c4b
Outputs:
  TestOutput:
    Description: "Test output"
    Value: !Join
      - ':'
      - !Ref 'SubnetIds'